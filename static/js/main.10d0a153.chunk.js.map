{"version":3,"sources":["index.js"],"names":["runEnum","timerEnum","DefaultState","runState","timerType","interval","breakMinutes","breakSeconds","sessionMinutes","sessionSeconds","timerMinutes","timerSeconds","App","props","state","IncrementBreak","bind","DecrementBreak","IncrementSession","DecrementSession","reset","startStopToggle","GetFormattedTimer","this","slice","toString","id","setState","timerSound","pause","currentTime","clearInterval","setInterval","playSound","play","Fragment","style","width","margin","textAlign","className","onClick","fontSize","GetTimerLabel","preload","src","ref","audio","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10d0a153.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nlet runEnum = {\n  running: 0,\n  stopped: 1\n};\nlet timerEnum = {\n  session: 0,\n  break: 1\n};\nlet DefaultState = {\n  runState: runEnum.stopped,\n  timerType: timerEnum.session,\n  interval: null,\n  breakMinutes: 5,\n  breakSeconds: 0,\n  sessionMinutes: 25,\n  sessionSeconds: 0,\n  timerMinutes: 25,\n  timerSeconds: 0\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...DefaultState };\n    this.IncrementBreak = this.IncrementBreak.bind(this);\n    this.DecrementBreak = this.DecrementBreak.bind(this);\n    this.IncrementSession = this.IncrementSession.bind(this);\n    this.DecrementSession = this.DecrementSession.bind(this);\n    this.reset = this.reset.bind(this);\n    this.startStopToggle = this.startStopToggle.bind(this);\n    this.GetFormattedTimer = this.GetFormattedTimer.bind(this);\n  }\n  GetFormattedTimer() {\n    return (\n      (\"0\" + this.state.timerMinutes).slice(-2).toString() + \":\" + (\"0\" + this.state.timerSeconds).slice(-2).toString()\n    );\n  }\n  // Functions\n  IncrementBreak(id) {\n    let state = { ...this.state };\n    if (state.runState === runEnum.stopped) {\n      state.breakMinutes++;\n      if (state.breakMinutes > 60) {\n        state.breakMinutes = 60;\n      }\n      if (state.timerType === timerEnum.break) {\n        state.timerMinutes = state.breakMinutes;\n        state.timerSeconds = 0;\n      }\n    }\n    this.setState(state);\n  }\n  DecrementBreak(id) {\n    let state = { ...this.state };\n    if (state.runState === runEnum.stopped) {\n      state.breakMinutes--;\n      if (state.breakMinutes < 1) {\n        state.breakMinutes = 1;\n      }\n      if (state.timerType === timerEnum.break) {\n        state.timerMinutes = state.breakMinutes;\n        state.timerSeconds = 0;\n      }\n    }\n    this.setState(state);\n  }\n  IncrementSession() {\n    let state = { ...this.state };\n    if (state.runState === runEnum.stopped) {\n      state.sessionMinutes++;\n      if (state.sessionMinutes > 60) {\n        state.sessionMinutes = 60;\n      }\n      if (state.timerType === timerEnum.session) {\n        state.timerMinutes = state.sessionMinutes;\n        state.timerSeconds = 0;\n      }\n    }\n    this.setState(state);\n  }\n  DecrementSession() {\n    let state = { ...this.state };\n    if (state.runState === runEnum.stopped) {\n      state.sessionMinutes--;\n      if (state.sessionMinutes < 1) {\n        state.sessionMinutes = 1;\n      }\n      if (state.timerType === timerEnum.session) {\n        state.timerMinutes = state.sessionMinutes;\n        state.timerSeconds = 0;\n      }\n    }\n    this.setState(state);\n  }\n  reset() {\n    this.timerSound.pause();\n    this.timerSound.currentTime = 0;\n    let interval = this.state.interval;\n    clearInterval(interval);\n    this.setState({ ...DefaultState });\n  }\n  GetTimerLabel() {\n    if (this.state.timerType === timerEnum.break) {\n      return \"Break\";\n    } else {\n      return \"Session\";\n    }\n  }\n  startStopToggle() {\n    let state = { ...this.state };\n    if (this.state.runState === runEnum.stopped) {\n      state.runState = runEnum.running;\n      state.interval = setInterval(() => {\n        state.timerSeconds--;\n        if (state.timerSeconds < 0) {\n          state.timerSeconds = 59;\n          state.timerMinutes--;\n          if (state.timerMinutes < 0) {\n            if (state.timerType === timerEnum.session) {\n              state.timerType = timerEnum.break;\n              state.timerMinutes = state.breakMinutes;\n              state.timerSeconds = state.breakSeconds;\n            } else {\n              state.timerType = timerEnum.session;\n              state.timerMinutes = state.sessionMinutes;\n              state.timerSeconds = state.sessionSeconds;\n            }\n            state.timerSeconds = 0;\n            this.playSound();\n          }\n        }\n        this.setState(state);\n      }, 1000);\n    } else {\n      state.runState = runEnum.stopped;\n      clearInterval(state.interval);\n    }\n    this.setState(state);\n  }\n  playSound() {\n    this.timerSound.play();\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div style={{ width: \"max-content\", margin: \"auto\" }}>\n          <div>\n            <h1 style={{ textAlign: \"center\" }}>Pomodoro Clock</h1>\n          </div>\n          <div id=\"column-container\">\n            <div id=\"row-container\">\n              <div id=\"break-box\" className=\"box\">\n                <h3 id=\"break-label\">Break Length</h3>\n                <button id=\"break-increment\" onClick={this.IncrementBreak}>\n                  <i style={{ fontSize: \"50px\" }} className=\"fas fa-sort-up\"></i>\n                </button>\n                <p id=\"break-length\">{this.state.breakMinutes}</p>\n                <button id=\"break-decrement\" onClick={this.DecrementBreak}>\n                  <i style={{ fontSize: \"50px\" }} className=\"fas fa-sort-down\"></i>\n                </button>\n              </div>\n              <div id=\"session-box\" className=\"box\">\n                <h3 id=\"session-label\">Session Length</h3>\n                <button id=\"session-increment\" onClick={this.IncrementSession}>\n                  <i style={{ fontSize: \"50px\" }} className=\"fas fa-sort-up\"></i>\n                </button>\n                <p id=\"session-length\">{this.state.sessionMinutes}</p>\n                <button id=\"session-decrement\" onClick={this.DecrementSession}>\n                  <i style={{ fontSize: \"50px\" }} className=\"fas fa-sort-down\"></i>\n                </button>\n              </div>\n            </div>\n            <div id=\"timer-box\">\n              <h2 id=\"timer-label\">{this.GetTimerLabel()}</h2>\n              <p id=\"time-left\">{this.GetFormattedTimer()}</p>\n              <button id=\"start_stop\" onClick={this.startStopToggle}>\n                <i style={{ fontSize: \"25px\" }} className=\"fas fa-play\"></i>\n                <i style={{ fontSize: \"25px\" }} className=\"fas fa-pause\"></i>\n              </button>\n              <button id=\"reset\" onClick={this.reset}>\n                <i style={{ fontSize: \"25px\" }} className=\"fas fa-sync\"></i>\n              </button>\n            </div>\n          </div>\n          <audio\n            id=\"beep\"\n            preload=\"auto\"\n            src=\"https://goo.gl/65cBl1\"\n            ref={audio => {\n              this.timerSound = audio;\n            }}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}